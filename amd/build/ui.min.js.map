{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Pinyin characters ui\n *\n * @module      tiny_pinyin/ui\n * @copyright   2024 Your Name <you@example.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport TinyPinyinModal from './modal';\nimport {getPinyinChars} from './options';\nimport Selectors from './selectors';\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = (editor, data) => {\n    const pinyinChars = getPinyinChars(editor);\n\n    return Object.assign({}, {\n        elementid: editor.id,\n        pinyinchars: pinyinChars,\n    }, data);\n};\n\n/**\n * Display the Pinyin accents dialog\n * @param {TinyMCE} editor\n * @param {Object} data\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor, data = {}) => {\n    const modal = await TinyPinyinModal.create({\n        templateContext: getTemplateContext(editor, data),\n    });\n\n    const $root = modal.getRoot();\n    const root = $root[0];\n\n    root.addEventListener('click', (e) => {\n        const pinyinCharBtn = e.target.closest(Selectors.pinyinChar);\n\n        if (pinyinCharBtn) {\n            e.preventDefault();\n            editor.insertContent(pinyinCharBtn.getAttribute('data-value'));\n            modal.destroy(); // Close/hide the modal.\n            editor.focus(); // Set the focus back to the editor.\n        }\n    });\n};\n"],"names":["editor","displayDialogue","getTemplateContext","data","pinyinChars","Object","assign","elementid","id","pinyinchars","async","modal","TinyPinyinModal","create","templateContext","$root","getRoot","root","addEventListener","e","pinyinCharBtn","target","closest","Selectors","pinyinChar","preventDefault","insertContent","getAttribute","destroy","focus"],"mappings":";;;;;;;oMA+B6BA,SACzBC,gBAAgBD,eAWdE,mBAAqB,CAACF,OAAQG,cAC1BC,aAAc,2BAAeJ,eAE5BK,OAAOC,OAAO,GAAI,CACrBC,UAAWP,OAAOQ,GAClBC,YAAaL,aACdD,OASDF,gBAAkBS,eAAMV,YAAQG,4DAAO,SACnCQ,YAAcC,eAAgBC,OAAO,CACvCC,gBAAiBZ,mBAAmBF,OAAQG,QAG1CY,MAAQJ,MAAMK,UACdC,KAAOF,MAAM,GAEnBE,KAAKC,iBAAiB,SAAUC,UACtBC,cAAgBD,EAAEE,OAAOC,QAAQC,mBAAUC,YAE7CJ,gBACAD,EAAEM,iBACFzB,OAAO0B,cAAcN,cAAcO,aAAa,eAChDhB,MAAMiB,UACN5B,OAAO6B"}